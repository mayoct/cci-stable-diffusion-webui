version: 2.1

workflows:
  Tests:
    jobs:
      - test

executors:
  linux_cpu:
    machine:
      image: ubuntu-2204:current
    resource_class: large
  linux_gpu:
    machine:
      image: linux-cuda-11:default
    resource_class: gpu.nvidia.large
  mac_m1:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.large.gen1

jobs:
  test:
    executor: linux_cpu
    steps:
      - checkout
      - restore_cache:
          name: Restore pip cache
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "requirements.txt" }}-{{.Branch}}
            - v1-dependencies-{{ arch }}-{{ checksum "requirements.txt" }}
            - v1-dependencies-{{ arch }}
      - run:
          name: Set up Python 3.10
          command: |
            pyenv install -s 3.10.6
            pyenv global 3.10.6
      - run:
          name: Install test dependencies
          command: pip install wait-for-it -r requirements-test.txt
          environment:
            PIP_DISABLE_PIP_VERSION_CHECK: "1"
            PIP_PROGRESS_BAR: "off"
      - run:
          name: Setup environment
          command: python launch.py --skip-torch-cuda-test --exit
          environment:
            PIP_DISABLE_PIP_VERSION_CHECK: "1"
            PIP_PROGRESS_BAR: "off"
            TORCH_INDEX_URL: https://download.pytorch.org/whl/cpu
            WEBUI_LAUNCH_LIVE_OUTPUT: "1"
            PYTHONUNBUFFERED: "1"
      - save_cache:
          name: Save pip cache
          key: v1-dependencies-{{ arch }}-{{ checksum "requirements.txt" }}-{{.Branch}}
          paths:
            - ~/.cache/pip
      - run:
          name: Start test server
          command: >
            python -m coverage run
            --data-file=.coverage.server
            launch.py
            --skip-prepare-environment
            --skip-torch-cuda-test
            --test-server
            --do-not-download-clip
            --no-half
            --disable-opt-split-attention
            --use-cpu all
            --api-server-stop
            2>&1 | tee output.txt &
      - run:
          name: Run tests
          command: |
            wait-for-it --service 127.0.0.1:7860 -t 600
            python -m pytest -vv --junitxml=test/results.xml --cov . --cov-report=xml --verify-base-url test
      - run:
          name: Kill test server
          command: curl -vv -XPOST http://127.0.0.1:7860/sdapi/v1/server-stop && sleep 10
          when: always
      - run:
          name: Show coverage
          command: |
            python -m coverage combine .coverage*
            python -m coverage report -i
            python -m coverage html -i
      - store_test_results:
          path: test
          when: always
      - store_artifacts:
          name: Upload main app output
          path: output.txt
          destination: output/
          when: always
      - store_artifacts:
          name: Upload coverage HTML
          path: htmlcov
          destination: htmlcov/
          when: always
